name: Run the System Integration Tests

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: The application environment name
        required: false
        default: test  
      
jobs:
  execute-sit:
    name: Execute SITs
    runs-on: ubuntu-24.04
    environment: ${{inputs.environment}}
    env:
      TF_VAR_app_environment: ${{inputs.environment}}
      TF_VAR_infra_environment: ${{vars.INFRA_ENVIRONMENT}}
      TF_VAR_vpc_cidr: ${{vars.VPC_CIDR}}
      TF_VAR_infra_version: v0.0.49
    permissions:
      contents: write
      id-token: write
    steps:
      
      - name: Provision cloud infrastructure
        uses: keeonline/reference-github-actions/terraform-apply@v0.0.17
        with:
          aws_account_id: ${{secrets.AWS_ACCOUNT_ID}}
          aws_region: ${{vars.AWS_REGION}}
          action: apply
          repo_name: reference-infra-aws
          repo_ref: v0.0.49
          terraform_codedir: terraform
          environment: ${{vars.INFRA_ENVIRONMENT}}

      - name: Get the application version
        id: versions
        uses: keeonline/gh-actions/actions/artifact-version@v0.0.2
          
      - name: show versions
        run: |
          echo "branch-semantic=${{steps.versions.outputs.branch}}"
          echo "release-semantic=${{steps.versions.outputs.release}}"

      - name: Set the application version
        id: app_version
        shell: bash
        run: |
          if [ "${{ github.ref_type }}" == "branch" ]
          then
            echo "value=${{steps.versions.outputs.branch}}" >> $GITHUB_OUTPUT
          else
            echo "value=${{steps.versions.outputs.release}}" >> $GITHUB_OUTPUT
          fi

      - name: Deploy application
        uses: keeonline/github-actions/terraform-apply@v0.0.17
        env:
          TF_VAR_app_version: ${{steps.app_version.outputs.value}}
        with:
          aws_account_id: ${{secrets.AWS_ACCOUNT_ID}}
          aws_region: ${{vars.AWS_REGION}}
          action: apply
          terraform_codedir: deploy/aws
          environment: ${{inputs.environment}}

      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Download the standalone karate jar
        run: |
          wget -O /opt/karate.jar https://github.com/karatelabs/karate/releases/download/v1.5.1/karate-1.5.1.jar

      - name: Configure credentials for AWS CLI usage
        uses: aws-actions/configure-aws-credentials/@v4
        with:
          role-to-assume: arn:aws:iam::${{secrets.AWS_ACCOUNT_ID}}:role/IaC
          aws-region: ${{vars.AWS_REGION}}

      - name: Execute the service tests using karate
        working-directory: sit/karate
        run: |
          ALB=$(aws elbv2 describe-load-balancers --names ${{vars.INFRA_ENVIRONMENT}}-alb --query 'LoadBalancers[*].[DNSName]' --output text)
          BASEURL=http://${ALB}
          echo "baseurl=${BASEURL}"
          java -Dbaseurl=${BASEURL} -jar /opt/karate.jar .
              
      - name: Upload service test reports
        uses: actions/upload-artifact@v4
        with:
          name: Service Test Reports
          path: sit/karate/target/karate-reports

      - name: Undeploy application
        uses: keeonline/github-actions/terraform-apply@v0.0.17
        env:
          TF_VAR_app_version: ${{steps.app_version.outputs.version}}
        with:
          aws_account_id: ${{secrets.AWS_ACCOUNT_ID}}
          aws_region: ${{vars.AWS_REGION}}
          action: destroy
          terraform_codedir: deploy/aws
          environment: ${{inputs.environment}}
            
      - name: Destroy cloud infrastructure
        uses: keeonline/github-actions/terraform-apply@v0.0.17
        env:
          TF_VAR_app_version: ${{steps.app_version.outputs.version}}
        with:
          aws_account_id: ${{secrets.AWS_ACCOUNT_ID}}
          aws_region: ${{vars.AWS_REGION}}
          action: destroy
          repo_name: reference-infra-aws
          repo_ref: v0.0.49
          terraform_codedir: terraform
          environment: ${{vars.INFRA_ENVIRONMENT}}
