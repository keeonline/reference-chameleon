name: Push to feature branch

on:
  push:
    branches:
      - '**'
      - '!main'

jobs:
  push-to-feature:
      runs-on: ubuntu-24.04
      permissions:
        contents: write
      steps:
        - name: salutation
          run: |
            echo This is on_push for chameleon service. branch=${{ github.ref_name }}

        - name: Checkout sources
          uses: actions/checkout@v4
          with:
            fetch-depth: 0  

        - name: Setup Java
          uses: actions/setup-java@v4
          with:
            distribution: 'temurin'
            java-version: 23

        - name: Setup Gradle            
          uses: gradle/actions/setup-gradle@v4

        - name: Get branch version
          id: version
          run: |
            echo "value=${{github.ref_name}}-latest" >> $GITHUB_OUTPUT

        - name: Build application with Gradle
          run: ./gradlew -Pversion=${{steps.version.outputs.value}} build --no-daemon

        - name: Upload build reports
          uses: actions/upload-artifact@v4
          with:
            name: Build Reports
            path: build/reports

        - name: Build image
          run: docker build --build-arg VERSION=${{steps.version.outputs.value}} -t ${{vars.DOCKERHUB_USERNAME}}/chameleon:${{steps.version.outputs.value}} .  

        - name: Login to Docker registry
          uses: docker/login-action@v3
          with:
            username: ${{vars.DOCKERHUB_USERNAME}}
            password: ${{secrets.DOCKERHUB_TOKEN}}
            
        - name: Publish image
          run: docker push ${{vars.DOCKERHUB_USERNAME}}/chameleon:${{steps.version.outputs.value}}

        # - name: Publish Test Report
        #   if: always()
        #   uses: ctrf-io/github-test-reporter@v1
        #   with:
        #     # report-path: './build/test-results/test/TEST-com.keeonline.chameleon.api.controller.GreetingsControllerTest.xml'
        #     report-path: './build/test-results/test/*.xml'
        #     integrations-config: |
        #       {
        #         "junit-to-ctrf": {
        #           "enabled": true,
        #           "action": "convert",
        #           "options": {
        #             "output": "./ctrf-reports/ctrf-report.json",
        #             "toolname": "junit-to-ctrf",
        #             "useSuiteName": false,
        #             "env": {
        #               "appName": "chameleon"
        #             }
        #           }
        #         }
        #       }

        # - name: Generate JaCoCo Badge
        #   uses: cicirello/jacoco-badge-generator@v2
        #   with:
        #     generate-branches-badge: true
        #     jacoco-csv-file: build/reports/jacoco/test/jacocoTestReport.csv

        # - name: List files
        #   run: |
        #     ls -lsa ./.github/badges

