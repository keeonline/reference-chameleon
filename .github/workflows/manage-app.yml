name: Manage application

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: The application environment name
        required: false
        default: test  
      
jobs:
  manage-application:
    name: Manage infratstructure (apply)
    runs-on: ubuntu-24.04
    environment: ${{inputs.environment}}
    env:
      TF_VAR_app_environment: ${{inputs.environment}}
      TF_VAR_infra_environment: ${{vars.INFRA_ENVIRONMENT}}
      TF_VAR_infra_version: v0.0.33
    permissions:
      contents: write
      id-token: write
    steps:
      
      - name: Provision cloud infrastructure
        uses: keeonline/github-actions/terraform-apply@v0.0.9
        with:
          aws_account_id: ${{secrets.AWS_ACCOUNT_ID}}
          aws_region: ${{vars.AWS_REGION}}
          action: apply
          repo_name: infra-01-aws
          repo_ref: v0.0.33
          terraform_codedir: terraform
          environment: ${{vars.INFRA_ENVIRONMENT}}

      - name: Get the application version
        id: versions
        uses: keeonline/github-actions/artefact-version@v0.0.9
          
      - name: Deploy application
        uses: keeonline/github-actions/terraform-apply@v0.0.9
        env:
          TF_VAR_app_version: ${{steps.versions.outputs.branch}}
        with:
          aws_account_id: ${{secrets.AWS_ACCOUNT_ID}}
          aws_region: ${{vars.AWS_REGION}}
          action: apply
          terraform_codedir: deploy/aws
          environment: test

# !!!!! SIT EXECUTION START !!!!!
          
# !!!!!!!!!!!!!!!!!!!!!! SIT EXECUTION WILL BE ADDED HERE !!!!!!!!!!!!!!!!!!!!!!!!!
# aws elbv2 describe-load-balancers --names test-alb --query 'LoadBalancers[*].[DNSName]' --output text

      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '23'

      - name: Download the standalone karate jar
        run: |
          wget -O /opt/karate.jar https://github.com/karatelabs/karate/releases/download/v1.5.1/karate-1.5.1.jar

      - name: Configure credentials for AWS CLI usage
        uses: aws-actions/configure-aws-credentials/@v4
        with:
          role-to-assume: arn:aws:iam::${{secrets.AWS_ACCOUNT_ID}}:role/IaC
          aws-region: ${{vars.AWS_REGION}}

      - name: Check the alpha service state
        run: |
          aws ecs describe-services --cluster test-ecs-cluster-applications --services test-ecs-service-alpha
    
      - name: Check the bravo service state
        run: |
          aws ecs describe-services --cluster test-ecs-cluster-applications --services test-ecs-service-bravo
      
      - name: Execute the service tests using karate
        working-directory: sit/karate
        run: |
          ALB=$(aws elbv2 describe-load-balancers --names test-alb --query 'LoadBalancers[*].[DNSName]' --output text)
          BASEURL=http://${ALB}
          echo "baseurl=${BASEURL}"
          java -Dbaseurl=${BASEURL} -jar /opt/karate.jar .
              
      - name: Upload service test reports
        uses: actions/upload-artifact@v4
        with:
          name: Service Test Reports
          path: sit/karate/target/karate-reports

# !!!!! SIT EXECUTION END !!!!!
          
      # - name: Undeploy application
      #   uses: keeonline/github-actions/terraform-apply@v0.0.9
      #   env:
      #     TF_VAR_app_version: ${{steps.versions.outputs.branch}}
      #   with:
      #     aws_account_id: ${{secrets.AWS_ACCOUNT_ID}}
      #     aws_region: ${{vars.AWS_REGION}}
      #     action: destroy
      #     terraform_codedir: deploy/aws
      #     environment: test
            
      # - name: Destroy cloud infrastructure
      #   uses: keeonline/github-actions/terraform-apply@v0.0.9
      #   env:
      #     TF_VAR_app_version: ${{steps.app_version.outputs.version}}
      #   with:
      #     aws_account_id: ${{secrets.AWS_ACCOUNT_ID}}
      #     aws_region: ${{vars.AWS_REGION}}
      #     action: destroy
      #     repo_name: infra-01-aws
      #     repo_ref: v0.0.33
      #     terraform_codedir: terraform
      #     environment: ${{vars.INFRA_ENVIRONMENT}}
