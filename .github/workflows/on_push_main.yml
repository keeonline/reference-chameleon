name: Push to main branch

on:
  push:
    branches:
      - main
        
jobs:
  push-to-main:
      runs-on: ubuntu-24.04
      permissions:
        contents: write
      steps:
        # - name: salutation
        #   run: |
        #     echo This is on_push for chameleon service. branch=${{ github.ref_name }}

        # - name: Checkout sources
        #   uses: actions/checkout@v4
        #   with:
        #     fetch-depth: 0  

        - name: Setup Java
          uses: actions/setup-java@v4
          with:
            distribution: 'temurin'
            java-version: 21

        - name: Setup Gradle            
          uses: gradle/actions/setup-gradle@v4

        - name: Get the application artifact version
          id: versions
          uses: keeonline/gh-actions/actions/artifact-version@v0.0.2

        - name: Build application with Gradle
          run: ./gradlew -Pversion=${{steps.versions.outputs.branch}} build --no-daemon

        - name: Show build outputs
          run: |
            ls -lsa build/libs

        - name: Upload build reports
          uses: actions/upload-artifact@v4
          with:
            name: Build Reports
            path: build/reports

        - name: Show build outputs
          run: |
            ls -lsa build/libs

        - name: Tag repo
          uses: richardsimko/update-tag@v1.1.6
          with:
            tag_name: ${{steps.versions.outputs.release}}
          env:
            GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

        # # - name: Build image
        # #   run: docker build --build-arg VERSION=${{steps.versions.outputs.release}} -t ${{vars.DOCKERHUB_USERNAME}}/chameleon:${{steps.versions.outputs.release}} .  

        # # - name: Login to Docker registry
        # #   uses: docker/login-action@v3
        # #   with:
        # #     username: ${{vars.DOCKERHUB_USERNAME}}
        # #     password: ${{secrets.DOCKERHUB_TOKEN}}
            
        # # - name: Publish image
        # #   run: docker push ${{vars.DOCKERHUB_USERNAME}}/chameleon:${{steps.versions.outputs.release}}
          
        # - name: Tag the repository with the semantic version
        #   uses: actions/github-script@v7
        #   with:
        #     script: |
        #       github.rest.git.createRef({
        #         owner: context.repo.owner,
        #         repo: context.repo.repo,
        #         ref: 'refs/tags/${{steps.versions.outputs.release}}',
        #         sha: context.sha
        #       })
