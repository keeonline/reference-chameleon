name: Manage application

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: The application environment name
        required: false
        default: test  
      
jobs:
  manage-application:
    name: Manage infratstructure (apply)
    runs-on: ubuntu-24.04
    environment: ${{inputs.environment}}
    env:
      TF_VAR_app_environment: ${{inputs.environment}}
      TF_VAR_infra_environment: ${{vars.INFRA_ENVIRONMENT}}
      TF_VAR_infra_version: karate-latest
    permissions:
      contents: write
      id-token: write
    steps:
      
      - name: Get the application version
        id: app_version
        uses: keeonline/github-actions/artefact-version-by-ref-type@v0.0.8

      - name: show
        run: |
          echo "infra_version=${{steps.app_version.outputs.version}}"

      - name: Provision cloud infrastructure
        uses: keeonline/github-actions/terraform-action@v0.0.8
        env:
          TF_VAR_app_version: ${{steps.app_version.outputs.version}}
        with:
          aws_account_id: ${{secrets.AWS_ACCOUNT_ID}}
          aws_region: ${{secrets.AWS_REGION}}
          action: apply
          repo_name: infra-01-aws
          repo_ref: karate
          terraform_codedir: terraform/core
          environment: ${{vars.INFRA_ENVIRONMENT}}


      - name: Deploy application
        uses: keeonline/github-actions/terraform-action@v0.0.8
        env:
          TF_VAR_app_version: ${{steps.app_version.outputs.version}}
        with:
          aws_account_id: ${{secrets.AWS_ACCOUNT_ID}}
          aws_region: ${{secrets.AWS_REGION}}
          action: apply
          terraform_codedir: deploy/aws
          environment: test
          
# !!!!!!!!!!!!!!!!!!!!!! SIT EXECUTION WILL BE ADDED HERE !!!!!!!!!!!!!!!!!!!!!!!!!
# aws elbv2 describe-load-balancers --names test-alb --query 'LoadBalancers[*].[DNSName]' --output text

      
      - name: Undeploy application
        uses: keeonline/github-actions/terraform-action@v0.0.8
        env:
          TF_VAR_app_version: ${{steps.app_version.outputs.version}}
        with:
          aws_account_id: ${{secrets.AWS_ACCOUNT_ID}}
          aws_region: ${{secrets.AWS_REGION}}
          action: destroy
          terraform_codedir: deploy/aws
          environment: test
            
      - name: Destroy cloud infrastructure
        uses: keeonline/github-actions/terraform-action@v0.0.8
        env:
          TF_VAR_app_version: ${{steps.app_version.outputs.version}}
        with:
          aws_account_id: ${{secrets.AWS_ACCOUNT_ID}}
          aws_region: ${{secrets.AWS_REGION}}
          action: destroy
          repo_name: infra-01-aws
          repo_ref: karate
          terraform_codedir: terraform/core
          environment: ${{vars.INFRA_ENVIRONMENT}}
  
  