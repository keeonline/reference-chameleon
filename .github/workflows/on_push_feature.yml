name: Push to feature branch

on:
  push:
    branches:
      - '**'
      - '!main'

jobs:
  build-application:
      name: Build Application
      runs-on: ubuntu-24.04
      permissions:
        contents: write
      steps:
        # - name: Checkout sources
        #   uses: actions/checkout@v4
        #   with:
        #     fetch-depth: 0  

        - name: Setup Java
          uses: actions/setup-java@v4
          with:
            distribution: 'temurin'
            java-version: 21

        - name: Setup Gradle            
          uses: gradle/actions/setup-gradle@v4

        - name: Get the application artifact version
          id: versions
          uses: keeonline/gh-actions/actions/artifact-version@v0.0.2

        - name: Build application with Gradle
          run: ./gradlew -Pversion=${{steps.versions.outputs.branch}} build --no-daemon

        - name: Show build outputs
          run: |
            ls -lsa build/libs

        - name: Upload build reports
          uses: actions/upload-artifact@v4
          with:
            name: Build Reports
            path: build/reports

        - name: Build image
          run: | 
            docker build --build-arg VERSION=${{steps.versions.outputs.branch}} \
                         -t chameleon:${{steps.versions.outputs.branch}} \
                         .  

        - name: List image 
          run: | 
            docker image ls chameleon:${{steps.versions.outputs.branch}}

        - name: Inspect image
          run: | 
            docker inspect --type=image chameleon:${{steps.versions.outputs.branch}}

        - name: Setup docker compose
          uses: docker/setup-compose-action@v1.2.0

        # - name: Install docker compose
        #   run: |
        #     curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        #     chmod +x /usr/local/bin/docker-compose
        #     docker-compose --version

        - name: Create docker compose environment file
          working-directory: servicetest
          run: | 
            echo "VERSION=${{steps.versions.outputs.branch}}" >> .env
            cat .env          
                  
        - name: Start the chameleon container
          working-directory: servicetest
          run: |
            docker-compose up -d
            sleep 10

        - name: Setup karate
          run: |
            wget -O /opt/karate.jar https://github.com/karatelabs/karate/releases/download/v1.5.1/karate-1.5.1.jar
    
        - name: Execute the service tests using karate
          working-directory: servicetest/karate
          run: |
            java -jar /opt/karate.jar .
                
        - name: Upload service test reports
          uses: actions/upload-artifact@v4
          with:
            name: Service Test Reports
            path: servicetest/karate/target/karate-reports
    
        - name: Stop and remove the containers   
          if: always()
          working-directory: servicetest
          run: |
            docker-compose down 
        
        # - name: Login to Docker registry
        #   uses: docker/login-action@v3
        #   with:
        #     username: ${{vars.DOCKERHUB_USERNAME}}
        #     password: ${{secrets.DOCKERHUB_TOKEN}}
            
        # - name: Publish image
        #   run: docker push ${{vars.DOCKERHUB_USERNAME}}/chameleon:${{steps.versions.outputs.branch}}

    
    